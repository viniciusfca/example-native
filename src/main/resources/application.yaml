spring:
  redis:
    host: ${REDIS_HOST:example-native-redishot.example-native.svc.cluster.local}
    port: ${REDIS_PORT:6379}
  rabbitmq:
    host: ${RABBITMQ_HOST:localhost}
    virtual-host: ${RABBITMQ_VHOST:teste_performance}
    port: ${RABBITMQ_PORT:5672}
    username: ${RABBITMQ_USERNAME:rabbit}
    password: ${RABBITMQ_PASSWORD:123456}
    listener:
      simple:
        concurrency: ${RABBITMQ_MIN_CONCURRENCY:1}
        max-concurrency: ${RABBITMQ_MAX_CONCURRENCY:5}
        prefetch: ${RABBITMQ_PREFETCH:250}
  datasource:
     url: ${JDBC_URL:jdbc:mysql://localhost:3306/rabbit?allowPublicKeyRetrieval=true&useSSL=false}
     username: '${DATABASE_USER:root}'
     password: ${DATABASE_PASS:123456}
     tomcat:
        test-while-idle: true
        validation-query: SELECT 1
     hikari:
      maximum-pool-size: 5
      minimum-pool-size: 1
      hikari-max-lifetime: 1000

server:
  port : ${PORT:8080}
  
jwt:
  secret: ${JWT_SECRET:teste}
  

rabbit:
  exchange: ${RABBITMQ_EXCHANGE:teste}
  routing-key: ${RABBITMQ_KEY:teste_key}
  queue: ${RABBITMQ_QUEUE:teste_performance_queue}


  jpa:
     show-sql: ${SHOW_SQL:true}
     hibernate:
        ddl-auto: update
     properties:
        hibernate:
           dialect: org.hibernate.dialect.MySQLDialect
   
logging:
    level:
      root: ${LOGGING_LEVEL:INFO}     