variables:
  MAVEN_IMAGE: maven:latest

stages:
  - test
  - sonar
  - fortify
  - build
  - deploy
  - rollback


tests:
  stage: test
  image: $MAVEN_IMAGE
  script:
    - ls ${CI_PROJECT_DIR}
    - mvn -version
    - mvn test verify jacoco:report
    - cat target/site/jacoco/index.html
  coverage: "/Total.*?([0-9]{1,3})%/"
  artifacts:
    paths:
      - target/site/jacoco
    expire_in: 7 days
  only:
    - tags

sonar_stage:
  stage: sonar
  image: $CIKNIFE_IMAGE
  script:
    - export SONAR_URL=$STAGE_SONAR_URL
    - export SONAR_TOKEN=$STAGE_SONAR_TOKEN
    - ci-knife sonar-scanner
  variables:
    SONAR_ANALYSIS_MODE: publish
  dependencies:
    - tests
  only:
    - tags 

sonar_production:
  stage: sonar
  image: $CIKNIFE_IMAGE
  script:
    - ci-knife sonar-scanner
  variables:
    SONAR_ANALYSIS_MODE: publish
  dependencies:
    - tests
  only:
    - tags

fortify:
  stage: fortify
  image: $CIKNIFE_IMAGE
  script:
    - ci-knife security-scanner
  only:
    - tags

build:
  stage: build
  image: "springci/graalvm-ce:java17-0.12.x"
  script:
    - java -version
    - ${CI_PROJECT_DIR}/mvnw -version
    - ${CI_PROJECT_DIR}/mvnw -Pnative native:compile -DskipTests
  artifacts:
    paths:
      - target/exemplo-native
  only:
    - branches
    - tags
  except:
    - schedules

##########################
# Deploy staging jobs    #
##########################
deploy-staging-argo:
  stage: deploy
  image: $CIKNIFE_IMAGE
  variables:
    ARGOCD_SERVER: $HML_ARGOCD_SERVER
    ARGOCD_AUTH_TOKEN: $HML_ARGOCD_AUTH_TOKEN
    DEPLOYMENT_BRANCH: ${DEPLOYMENT_REPO_BRANCH_STAGING}
    DEPLOYMENT_DIRECTORY: ${DEPLOYMENT_PROJECT}
    DEPLOY_TAG: ${CI_COMMIT_SHORT_SHA}
    DOCKER_HOST: tcp://docker:2375
    DOCKER_TLS_CERTDIR: ""
  services:
    - docker:19.03-dind
  script:
    - ci-knife argocd-deploy --apps ${DEPLOYMENT_PROJECT} --namespace ${DEPLOYMENT_NAMESPACE} --branch ${DEPLOYMENT_REPO_BRANCH_STAGING} --docker-image --no-msg
  allow_failure: true
  only:
    - branches

##########################
# Deploy production jobs #
##########################

deploy-production-argo:
  stage: deploy
  image: $CIKNIFE_IMAGE
  services:
    - docker:18.09-dind
  script:
    - ci-knife argocd-deploy --apps ${DEPLOYMENT_PROJECT} --namespace ${DEPLOYMENT_NAMESPACE} --branch ${DEPLOYMENT_REPO_BRANCH_PROD} --docker-image
  allow_failure: true
  only:
    - tags
  when: manual

rollback-production-argo:
  stage: rollback
  image: $CIKNIFE_IMAGE
  services:
    - docker:18.09-dind
  script: ci-knife argocd-rollback
  allow_failure: false
  only:
    - tags
  when: manual
  dependencies:
    - deploy-production-argo
